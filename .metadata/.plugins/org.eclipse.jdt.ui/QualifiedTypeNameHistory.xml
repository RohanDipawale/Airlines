<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="lombok.Setter"/>
    <fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
    <fullyQualifiedTypeName name="Admin.pojo.allFlights"/>
    <fullyQualifiedTypeName name="java.util.stream.Collector"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.databind.ObjectMapper"/>
    <fullyQualifiedTypeName name="java.io.IOException"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.databind.JsonNode"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.core.query.Criteria"/>
    <fullyQualifiedTypeName name="javax.management.Query"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.repository.Query"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.core.query.Query"/>
    <fullyQualifiedTypeName name="org.springframework.http.MediaType"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.circuitbreaker.EnableCircuitBreaker"/>
    <fullyQualifiedTypeName name="com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="ChekIn.pojo.Booking"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.hystrix.EnableHystrix"/>
    <fullyQualifiedTypeName name="java.lang.Thread"/>
    <fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
    <fullyQualifiedTypeName name="FlightBooking.service.PayPalService"/>
    <fullyQualifiedTypeName name="FlightBooking.pojo.Order"/>
    <fullyQualifiedTypeName name="FlightBooking.pojo.Booking"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PutMapping"/>
    <fullyQualifiedTypeName name="java.util.stream.Collectors"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.repository.Aggregation"/>
    <fullyQualifiedTypeName name="security.repository.RoleRepository"/>
    <fullyQualifiedTypeName name="security.jwt.jwt.JwtUtils"/>
    <fullyQualifiedTypeName name="security.payload.request.LoginRequest"/>
    <fullyQualifiedTypeName name="security.payload.response.UserInfoResponse"/>
    <fullyQualifiedTypeName name="security.payload.response.MessageResponse"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.core.mapping.Document"/>
    <fullyQualifiedTypeName name="org.springframework.data.annotation.Id"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.core.mapping.DBRef"/>
    <fullyQualifiedTypeName name="java.util.HashSet"/>
    <fullyQualifiedTypeName name="security.pojo.Role"/>
    <fullyQualifiedTypeName name="security.pojo.ERole"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.repository.MongoRepository"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="javax.validation.constraints.NotBlank"/>
    <fullyQualifiedTypeName name="javax.validation.constraints.Size"/>
    <fullyQualifiedTypeName name="javax.validation.constraints.Email"/>
    <fullyQualifiedTypeName name="java.util.Set"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.AuthenticationEntryPoint"/>
    <fullyQualifiedTypeName name="org.hibernate.validator.internal.util.logging.LoggerFactory"/>
    <fullyQualifiedTypeName name="java.util.logging.Logger"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="org.slf4j.Logger"/>
    <fullyQualifiedTypeName name="org.slf4j.LoggerFactory"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Value"/>
    <fullyQualifiedTypeName name="javax.servlet.http.HttpServletRequest"/>
    <fullyQualifiedTypeName name="security.jwt.services.UserDetailsImpl"/>
    <fullyQualifiedTypeName name="security.repository.UserRepository"/>
    <fullyQualifiedTypeName name="security.pojo.User"/>
    <fullyQualifiedTypeName name="security.jwt.services.UserDetailsServiceImpl"/>
    <fullyQualifiedTypeName name="security.jwt.jwt.AuthEntryPointJwt"/>
    <fullyQualifiedTypeName name="security.jwt.jwt.AuthTokenFilter"/>
    <fullyQualifiedTypeName name="security.payload.request.SignUpRequest"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
</qualifiedTypeNameHistroy>
